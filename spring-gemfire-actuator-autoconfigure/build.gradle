plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
    id 'spring-java-jar'
}

description = "Spring Boot Auto-Configuration for VMware GemFire"

project.ext.set("pomProjectLongName","Spring Boot Auto-Configure for VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-boot-2.6-gemfire-actuator-autoconfigure-${gemfireBaseVersion}")
project.ext.set("pomProjectDescription",description)

description = "Spring Boot Actuator Auto-Configuration for VMware GemFire"

dependencies {
    api project(":spring-gemfire-actuator")
    api project(":spring-gemfire-autoconfigure")

    compileOnly "com.google.code.findbugs:jsr305"

    compileOnly "com.vmware.gemfire:geode-server-all:$gemfireVersion"

    testImplementation ("com.vmware.gemfire:geode-server-all:$gemfireVersion"){
        exclude group: 'com.vmware.gemfire', module: 'geode-log4j'
    }

    testImplementation "junit:junit"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.projectlombok:lombok"
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "com.vmware.gemfire:spring-test-gemfire-9.15-2.6:$springTestGemFireVersion"
    testImplementation "edu.umd.cs.mtc:multithreadedtc"
}

repositories {
    def additionalMavenRepoURLs = project.ext.get('additionalMavenRepoURLs')
    if (!additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
        additionalMavenRepoURLs.split(",").each {
            project.getRepositories()
                    .maven(mavenRepository -> {
                        mavenRepository.setUrl(uri(it.toString()));
                    });
        }
    }
}
