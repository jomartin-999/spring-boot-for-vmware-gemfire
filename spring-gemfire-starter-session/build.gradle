plugins {
    id 'java-library'
    id 'dependency-constraints'
    id 'gemfire-repo-artifact-publishing'
    id 'spring-java-jar'
}

description = "Spring Boot Starter for Spring Session using VMware GemFire"

project.ext.set("pomProjectLongName","Spring Boot Starter for Spring Session using VMware GemFire")
project.ext.set("pomProjectArtifactName","spring-boot-session-2.6-gemfire-${gemfireBaseVersion}")
project.ext.set("pomProjectDescription",description)

dependencies {
    api(project(':spring-gemfire-starter'))

    api "com.vmware.gemfire:spring-session-2.6-gemfire-${gemfireBaseVersion}:$springSessionDataGemFireVersion"

}

sourceSets {
    test {
        java {
            srcDir file('src/test/java')
            srcDir file('src/sbdg-test-read-only/java')
        }
        resources {
            srcDir file('src/test/resources')
            srcDir file('src/sbdg-test-read-only/resources')
        }
    }
}

repositories {
  def additionalMavenRepoURLs = project.ext.get('additionalMavenRepoURLs')
  if (!additionalMavenRepoURLs.isEmpty() && !additionalMavenRepoURLs.isBlank()) {
    additionalMavenRepoURLs.split(",").each {
      project.getRepositories()
              .maven(mavenRepository -> {
                mavenRepository.setUrl(uri(it.toString()));
              });
    }
  }
}
